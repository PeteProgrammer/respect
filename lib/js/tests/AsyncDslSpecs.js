// Generated by BUCKLESCRIPT VERSION 2.1.0, PLEASE EDIT WITH CARE
'use strict';

var Curry                           = require("bs-platform/lib/js/curry.js");
var DslSpecs$Stroimanrespect        = require("./DslSpecs.js");
var Respect_ctx$Stroimanrespect     = require("../src/Respect_ctx.js");
var Respect_dsl$Stroimanrespect     = require("../src/Respect_dsl.js");
var Respect_matcher$Stroimanrespect = require("../src/Respect_matcher.js");

Respect_dsl$Stroimanrespect.Async[/* register */3](Respect_dsl$Stroimanrespect.Async[/* describe */2]("Async dsl", /* :: */[
          Respect_dsl$Stroimanrespect.Async[/* it */1]("Example group has metadata", (function () {
                  var grp = DslSpecs$Stroimanrespect.parse(Respect_dsl$Stroimanrespect.Async[/* **> */0](/* tuple */[
                            "name",
                            "value"
                          ], Respect_dsl$Stroimanrespect.Async[/* describe */2]("Group", /* [] */0)));
                  var expected = Curry._3(Respect_ctx$Stroimanrespect.ContextMap[/* add */3], "name", "value", Respect_ctx$Stroimanrespect.ContextMap[/* empty */0]);
                  var partial_arg = grp[/* metadata */4];
                  return (function (param) {
                      return Respect_matcher$Stroimanrespect.shoulda((function (param) {
                                    return Respect_matcher$Stroimanrespect.equal(expected, param);
                                  }), partial_arg, param);
                    });
                })),
          /* [] */0
        ]));

/*  Not a pure module */
