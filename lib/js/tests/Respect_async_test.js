// Generated by BUCKLESCRIPT VERSION 2.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block           = require("bs-platform/lib/js/block.js");
var Curry           = require("bs-platform/lib/js/curry.js");
var Respect         = require("../src/Respect.js");
var TestHelpers     = require("./TestHelpers.js");
var Js_primitive    = require("bs-platform/lib/js/js_primitive.js");
var Respect_async   = require("../src/Respect_async.js");
var ErrorFunctions  = require("errorFunctions");
var Caml_exceptions = require("bs-platform/lib/js/caml_exceptions.js");
var Respect_matcher = require("../src/Respect_matcher.js");

var Dummy = Caml_exceptions.create("Respect_async_test.Dummy");

var Dummy2 = Caml_exceptions.create("Respect_async_test.Dummy2");

function haveMessage(expected, actual) {
  if (actual[0] === Respect_async.JsError) {
    return Respect_matcher.equal(expected, Js_primitive.undefined_to_opt(actual[1].message));
  } else {
    return (function (param) {
        return Respect_matcher.matchFailure(actual, expected, param);
      });
  }
}

Curry._1(Respect.Dsl[/* Async */12][/* register */3], Curry._2(Respect.Dsl[/* Async */12][/* describe */2], "Async module", /* :: */[
          Curry._2(Respect.Dsl[/* Async */12][/* describe */2], "return", /* :: */[
                Curry._2(Respect.Dsl[/* Async */12][/* it */1], "eventually returns the value", (function () {
                        var partial_arg = TestHelpers.AsyncMatchers[/* asyncResolve */1];
                        var partial_arg$1 = function (param, param$1) {
                          return Respect_matcher.$great$eq$great(partial_arg, (function (param) {
                                        return Respect_matcher.equal(42, param);
                                      }), param, param$1);
                        };
                        return (function (param) {
                            return Respect_matcher.shoulda(partial_arg$1, (function (param) {
                                          return Respect_async.$$return(42, param);
                                        }), param);
                          });
                      })),
                /* [] */0
              ]),
          /* :: */[
            Curry._2(Respect.Dsl[/* Async */12][/* describe */2], "map", /* :: */[
                  Curry._2(Respect.Dsl[/* Async */12][/* it */1], "eventually returns the modified value", (function () {
                          var partial_arg = TestHelpers.AsyncMatchers[/* asyncResolve */1];
                          var partial_arg$1 = function (param, param$1) {
                            return Respect_matcher.$great$eq$great(partial_arg, (function (param) {
                                          return Respect_matcher.equal(43, param);
                                        }), param, param$1);
                          };
                          return (function (param) {
                              return Respect_matcher.shoulda(partial_arg$1, (function (param) {
                                            return Respect_async.map((function (x) {
                                                          return x + 1 | 0;
                                                        }), (function (param) {
                                                          return Respect_async.$$return(42, param);
                                                        }), param);
                                          }), param);
                            });
                        })),
                  /* :: */[
                    Curry._2(Respect.Dsl[/* Async */12][/* it */1], "eventually returns error if mapping function throws", (function () {
                            var partial_arg = TestHelpers.AsyncMatchers[/* asyncThrow */2];
                            var partial_arg$1 = function (param, param$1) {
                              return Respect_matcher.$great$eq$great(partial_arg, (function (param) {
                                            return Respect_matcher.equal(Dummy, param);
                                          }), param, param$1);
                            };
                            return (function (param) {
                                return Respect_matcher.shoulda(partial_arg$1, (function (param) {
                                              return Respect_async.map((function () {
                                                            throw Dummy;
                                                          }), (function (param) {
                                                            return Respect_async.$$return(44, param);
                                                          }), param);
                                            }), param);
                              });
                          })),
                    /* [] */0
                  ]
                ]),
            /* :: */[
              Curry._2(Respect.Dsl[/* Async */12][/* describe */2], "bind", /* :: */[
                    Curry._2(Respect.Dsl[/* Async */12][/* it */1], "eventually returns the bound value", (function () {
                            var partial_arg = TestHelpers.AsyncMatchers[/* asyncResolve */1];
                            var partial_arg$1 = function (param, param$1) {
                              return Respect_matcher.$great$eq$great(partial_arg, (function (param) {
                                            return Respect_matcher.equal(43, param);
                                          }), param, param$1);
                            };
                            return (function (param) {
                                return Respect_matcher.shoulda(partial_arg$1, (function (param) {
                                              return Respect_async.bind((function (x) {
                                                            var partial_arg = x + 1 | 0;
                                                            return (function (param) {
                                                                return Respect_async.$$return(partial_arg, param);
                                                              });
                                                          }), (function (param) {
                                                            return Respect_async.$$return(42, param);
                                                          }), param);
                                            }), param);
                              });
                          })),
                    /* :: */[
                      Curry._2(Respect.Dsl[/* Async */12][/* it */1], "eventually returns error if bound function throws", (function () {
                              var partial_arg = TestHelpers.AsyncMatchers[/* asyncThrow */2];
                              var partial_arg$1 = function (param, param$1) {
                                return Respect_matcher.$great$eq$great(partial_arg, (function (param) {
                                              return Respect_matcher.equal(Dummy, param);
                                            }), param, param$1);
                              };
                              return (function (param) {
                                  return Respect_matcher.shoulda(partial_arg$1, (function (param) {
                                                return Respect_async.bind((function () {
                                                              throw Dummy;
                                                            }), (function (param) {
                                                              return Respect_async.$$return(42, param);
                                                            }), param);
                                              }), param);
                                });
                            })),
                      /* [] */0
                    ]
                  ]),
              /* :: */[
                Curry._2(Respect.Dsl[/* Async */12][/* describe */2], "from_callback", /* :: */[
                      Curry._2(Respect.Dsl[/* Async */12][/* it */1], "creates an async that succeeds", (function () {
                              var partial_arg = TestHelpers.AsyncMatchers[/* asyncResolve */1];
                              var partial_arg$1 = function (param, param$1) {
                                return Respect_matcher.$great$eq$great(partial_arg, (function (param) {
                                              return Respect_matcher.equal(42, param);
                                            }), param, param$1);
                              };
                              return (function (param) {
                                  return Respect_matcher.shoulda(partial_arg$1, (function (param) {
                                                return Respect_async.from_callback((function (param) {
                                                              return Curry._1(param, 42);
                                                            }), param);
                                              }), param);
                                });
                            })),
                      /* [] */0
                    ]),
                /* :: */[
                  Curry._2(Respect.Dsl[/* Async */12][/* describe */2], "Timeout", /* :: */[
                        Curry._2(Respect.Dsl[/* Async */12][/* it */1], "fails when timeout exceeded", (function () {
                                var after = function (param) {
                                  var cb = param[0];
                                  setTimeout((function () {
                                          return Curry._1(cb, 42);
                                        }), 10);
                                  return /* () */0;
                                };
                                var partial_arg = Respect_async.timeout(/* MilliSeconds */Block.__(0, [0]), after);
                                var partial_arg$1 = TestHelpers.AsyncMatchers[/* asyncThrow */2];
                                var partial_arg$2 = function (param, param$1) {
                                  return Respect_matcher.$great$eq$great(partial_arg$1, (function (param) {
                                                return Respect_matcher.equal(Respect_async.Timeout, param);
                                              }), param, param$1);
                                };
                                return (function (param) {
                                    return Respect_matcher.shoulda(partial_arg$2, partial_arg, param);
                                  });
                              })),
                        /* :: */[
                          Curry._2(Respect.Dsl[/* Async */12][/* it */1], "Succeeds when timeout not exceeded", (function () {
                                  var after = function (param) {
                                    var cb = param[0];
                                    setTimeout((function () {
                                            return Curry._1(cb, 42);
                                          }), 0);
                                    return /* () */0;
                                  };
                                  var partial_arg = Respect_async.timeout(/* MilliSeconds */Block.__(0, [10]), after);
                                  var partial_arg$1 = TestHelpers.AsyncMatchers[/* asyncResolve */1];
                                  var partial_arg$2 = function (param, param$1) {
                                    return Respect_matcher.$great$eq$great(partial_arg$1, (function (param) {
                                                  return Respect_matcher.equal(42, param);
                                                }), param, param$1);
                                  };
                                  return (function (param) {
                                      return Respect_matcher.shoulda(partial_arg$2, partial_arg, param);
                                    });
                                })),
                          /* [] */0
                        ]
                      ]),
                  /* :: */[
                    Curry._2(Respect.Dsl[/* Async */12][/* describe */2], "tryCatch", /* :: */[
                          Curry._2(Respect.Dsl[/* Async */12][/* it */1], "async resolve Some value", (function () {
                                  var partial_arg = TestHelpers.AsyncMatchers[/* asyncThrow */2];
                                  var partial_arg$1 = function (param, param$1) {
                                    return Respect_matcher.$great$eq$great(partial_arg, (function (param) {
                                                  return Respect_matcher.equal(Dummy2, param);
                                                }), param, param$1);
                                  };
                                  return (function (param) {
                                      return Respect_matcher.shoulda(partial_arg$1, (function (param) {
                                                    return Respect_async.tryCatch((function (param) {
                                                                  if (param === Dummy) {
                                                                    return /* Some */[42];
                                                                  } else {
                                                                    return /* None */0;
                                                                  }
                                                                }), (function (param) {
                                                                  return Respect_async.map((function () {
                                                                                throw Dummy2;
                                                                              }), (function (param) {
                                                                                return Respect_async.$$return(43, param);
                                                                              }), param);
                                                                }), param);
                                                  }), param);
                                    });
                                })),
                          /* :: */[
                            Curry._2(Respect.Dsl[/* Async */12][/* it */1], "async throws None value", (function () {
                                    var partial_arg = TestHelpers.AsyncMatchers[/* asyncResolve */1];
                                    var partial_arg$1 = function (param, param$1) {
                                      return Respect_matcher.$great$eq$great(partial_arg, (function (param) {
                                                    return Respect_matcher.equal(42, param);
                                                  }), param, param$1);
                                    };
                                    return (function (param) {
                                        return Respect_matcher.shoulda(partial_arg$1, (function (param) {
                                                      return Respect_async.tryCatch((function (param) {
                                                                    if (param === Dummy) {
                                                                      return /* Some */[42];
                                                                    } else {
                                                                      return /* None */0;
                                                                    }
                                                                  }), (function (param) {
                                                                    return Respect_async.map((function () {
                                                                                  throw Dummy;
                                                                                }), (function (param) {
                                                                                  return Respect_async.$$return(43, param);
                                                                                }), param);
                                                                  }), param);
                                                    }), param);
                                      });
                                  })),
                            /* [] */0
                          ]
                        ]),
                    /* :: */[
                      Curry._2(Respect.Dsl[/* Async */12][/* describe */2], "mapping from async js functions", /* :: */[
                            Curry._2(Respect.Dsl[/* Async */12][/* it */1], "handles JS errors nicely", (function () {
                                    var partial_arg = /* Some */["dummy"];
                                    var partial_arg$1 = function (param) {
                                      return haveMessage(partial_arg, param);
                                    };
                                    var partial_arg$2 = TestHelpers.AsyncMatchers[/* asyncThrow */2];
                                    var partial_arg$3 = function (param, param$1) {
                                      return Respect_matcher.$great$eq$great(partial_arg$2, partial_arg$1, param, param$1);
                                    };
                                    return (function (param) {
                                        return Respect_matcher.shoulda(partial_arg$3, (function (param) {
                                                      return Respect_async.from_js((function (param) {
                                                                    ErrorFunctions.asyncThrowingFunction(42, param);
                                                                    return /* () */0;
                                                                  }), param);
                                                    }), param);
                                      });
                                  })),
                            /* :: */[
                              Curry._2(Respect.Dsl[/* Async */12][/* it */1], "also handles when no error occues", (function () {
                                      var partial_arg = TestHelpers.AsyncMatchers[/* asyncResolve */1];
                                      var partial_arg$1 = function (param, param$1) {
                                        return Respect_matcher.$great$eq$great(partial_arg, (function (param) {
                                                      return Respect_matcher.equal(42, param);
                                                    }), param, param$1);
                                      };
                                      return (function (param) {
                                          return Respect_matcher.shoulda(partial_arg$1, (function (param) {
                                                        return Respect_async.from_js((function (param) {
                                                                      ErrorFunctions.asyncSucceedingFunction(42, param);
                                                                      return /* () */0;
                                                                    }), param);
                                                      }), param);
                                        });
                                    })),
                              /* [] */0
                            ]
                          ]),
                      /* [] */0
                    ]
                  ]
                ]
              ]
            ]
          ]
        ]));

var Async = 0;

exports.Dummy       = Dummy;
exports.Dummy2      = Dummy2;
exports.Async       = Async;
exports.haveMessage = haveMessage;
/*  Not a pure module */
